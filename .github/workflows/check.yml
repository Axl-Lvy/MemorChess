name: Check code

on:
  pull_request:
    types: [ opened, synchronize, reopened, edited ]

jobs:
  android-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Ensure tests checkbox is checked
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const body = pr.body || "";
            if (!body.includes('- [x] Run Android tests')) {
              core.setFailed('The "Run Android tests" box must be checked in the PR description.');
            }

      - name: checkout
        uses: actions/checkout@v4

      - name: Update local.properties
        run: |
          chmod +x .github/scripts/update_properties.sh
          .github/scripts/update_properties.sh
        env:
          SUPABASE_API_KEY: ${{ secrets.SUPABASE_API_KEY }}
          TEST_USER_MAIL: ${{ secrets.TEST_USER_MAIL }}
          TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
      #   SUPABASE_DB_HOST: ${{ secrets.SUPABASE_DB_HOST }}
      #   SUPABASE_DB_PORT: ${{ secrets.SUPABASE_DB_PORT }}
      #   SUPABASE_DB_NAME: ${{ secrets.SUPABASE_DB_NAME }}
      #   SUPABASE_DB_USER: ${{ secrets.SUPABASE_DB_USER }}
      #   SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle wrapper
        uses: actions/cache@v4
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-wrapper-

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/daemon
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/libs.versions.toml') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache Kotlin compilation
        uses: actions/cache@v4
        with:
          path: |
            ~/.kotlin
            composeApp/build/kotlin
            buildSrc/build/kotlin
          key: ${{ runner.os }}-kotlin-${{ hashFiles('**/*.kt', '**/*.kts') }}
          restore-keys: |
            ${{ runner.os }}-kotlin-

      - name: Gradle cache
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: false
          gradle-home-cache-cleanup: true

      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-29

      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 35
          target: default
          arch: x86_64
          profile: pixel_8_pro
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 35
          target: default
          arch: x86_64
          profile: pixel_8_pro
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew connectedCheck

      - name: Generate test coverage report
        run: ./gradlew jacocoTestReport

      - name: Upload coverage to GitHub
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: |
            composeApp/build/reports/jacoco/
            composeApp/build/reports/androidTests/
            composeApp/build/reports/coverage/
            composeApp/build/outputs/code_coverage/
            composeApp/build/tmp/kotlin-classes/debug/
          retention-days: 30

  format-check:
    runs-on: ubuntu-latest
    steps:
      - name: Ensure tests checkbox is checked
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const body = pr.body || "";
            if (!body.includes('- [x] Check code formatting')) {
              core.setFailed('The "Check code formatting" box must be checked in the PR description.');
            }

      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: Run formatter check
        run: ./gradlew ktfmtCheck

  sonar-analysis:
    name: Sonar analysis
    runs-on: ubuntu-latest
    needs: android-tests  # Wait for tests to complete and generate coverage
    steps:
      - name: Ensure sonar checkbox is checked
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const body = pr.body || "";
            if (!body.includes('- [x] Run Sonar analysis')) {
              core.setFailed('The "Run Sonar analysis" box must be checked in the PR description.');
            }
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      # Download coverage artifacts from android-tests job
      - name: Download coverage artifacts
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: ./

      - name: Verify coverage file exists
        run: |
          echo "=== Downloaded artifact structure ==="
          find . -name "*.xml" -path "*/jacoco/*" -type f
          echo ""
          echo "=== Checking specific locations ==="
          if [ -f "reports/jacoco/jacocoTestReport/jacocoTestReport.xml" ]; then
            echo "✅ Found JaCoCo XML report at: reports/jacoco/jacocoTestReport/jacocoTestReport.xml"
            ls -la reports/jacoco/jacocoTestReport/jacocoTestReport.xml
          else
            echo "❌ JaCoCo XML report not found at expected location"
          fi
          echo ""
          echo "=== All JaCoCo-related files ==="
          find . -name "*jacoco*" -type f

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: Analyze with coverage
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonar --no-configuration-cache --no-parallel --no-daemon

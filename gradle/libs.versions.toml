[versions]
agp = "8.10.1"
android-compileSdk = "35"
android-minSdk = "35"
android-targetSdk = "35"
androidx-activityCompose = "1.10.1"
androidx-lifecycle = "2.9.0"
compose-multiplatform = "1.8.2"
hotpreview = "0.2.0"
kotlin = "2.2.0"
kotlinxDatetime = "0.6.2"
kotlinxSerializationJson = "1.9.0"
logging = "2.0.3"
navigationComposeVersion = "2.9.0-beta04"
material3Android = "1.3.2"
uiTestJunit4Android = "1.8.2"
xfeather_z = "1.1.1"
ktfmt = "0.23.0"
androidx-room = "2.7.2"
ksp = "2.2.0-2.0.2"
sqlite = "2.5.2"
koin = "4.1.0"
sonar = "6.2.0.5505"
material-icons = "1.7.3"
multiplatform-settings = "1.3.0"
supabase = "3.2.0"
ktor = "3.2.0"
material3-adaptive = "1.1.2"
composeHotReload = "1.0.0-beta04"
mockative = "3.0.1"

[libraries]
androidx-ui-test-junit4-android = { module = "androidx.compose.ui:ui-test-junit4-android", version.ref = "uiTestJunit4Android" }
androidx-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "uiTestJunit4Android" }
hotpreview = { module = "de.drick.compose:hotpreview", version.ref = "hotpreview" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-lifecycle-viewmodel = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDatetime" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }
logging = { module = "com.diamondedge:logging", version.ref = "logging" }
navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "navigationComposeVersion" }
androidx-material3-android = { group = "androidx.compose.material3", name = "material3-android", version.ref = "material3Android" }
material3-adaptive = { module = "org.jetbrains.compose.material3.adaptive:adaptive", version.ref = "material3-adaptive" }
xfeather_z = { module = "br.com.devsrsouza.compose.icons:feather", version.ref = "xfeather_z" }
androidx-room-runtime = { group = "androidx.room", name = "room-runtime", version.ref = "androidx-room" }
androidx-room-compiler = { group = "androidx.room", name = "room-compiler", version.ref = "androidx-room" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin"}
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin"}
koin-compose-viewmodel = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koin"}
koin-compose-viewmodel-navigation = { module = "io.insert-koin:koin-compose-viewmodel-navigation", version.ref = "koin"}
koin-test = {module = "io.insert-koin:koin-test", version.ref = "koin"}
sqlite-bundled = { module = "androidx.sqlite:sqlite-bundled", version.ref = "sqlite" }
material-icons = {module = "org.jetbrains.compose.material:material-icons-core", version.ref = "material-icons"}
multiplatform-settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatform-settings" }
supabase-database = { module = "io.github.jan-tennert.supabase:postgrest-kt", version.ref = "supabase" }
supabase-auth = { module = "io.github.jan-tennert.supabase:auth-kt", version.ref = "supabase" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-java = { module = "io.ktor:ktor-client-java", version.ref = "ktor" }
mockative = {module = "io.mockative:mockative", version.ref = "mockative"}

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinX-serialization-plugin = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ktfmt = {id = "com.ncorti.ktfmt.gradle", version.ref = "ktfmt"}
room = { id = "androidx.room", version.ref = "androidx-room" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
sonar = { id = "org.sonarqube", version.ref = "sonar" }
composeHotReload = { id = "org.jetbrains.compose.hot-reload", version.ref = "composeHotReload"}
mockative = { id = "io.mockative", version.ref = "mockative"}
